package ExamenNetwork2425;

import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.io.OutputStream;
import java.io.OutputStreamWriter;
import java.net.Socket;
import java.util.List;
import java.util.Map;

public class GestorCliente implements Runnable{
	
	private static BufferedReader brCliente;
	private static BufferedWriter bwCliente;
	private static ObjectInputStream ois;
	private static ObjectOutputStream oos;
	private static int idCliente;
	Socket s;
	
	public GestorCliente(Socket s) {
		this.s = s;
		this.idCliente = s.getPort();
		
		InputStream is;
		OutputStream os;
		try {			
			os = s.getOutputStream();
			is = s.getInputStream();
			
			this.brCliente = new BufferedReader(new InputStreamReader(is));
			this.bwCliente = new BufferedWriter(new OutputStreamWriter(os));
			
//			this.ois = new ObjectInputStream(is);
//			this.oos = new ObjectOutputStream(os);			
			
		} catch (IOException e) {
			e.printStackTrace();
		}
	}

	@Override
	public void run() {
		
		while(true) {
			
			// Servidor envía mensaje de bienvenida y opciones
			String mensaje = "Bienvenido Cliente " + idCliente + ". Elige una opción --> | 1. Añadir tarea | 2. Completar tarea. | 3. Mostrar tareas |";
			IOUtility.escribir(bwCliente, mensaje);
			
			// Servidor recibe opción
			String opcionString = IOUtility.leer(brCliente);
			
			System.out.println(opcionString);
			int opcion = Integer.parseInt(opcionString);
			
			if(opcion == 1) {
				addTarea();
			}
			else if(opcion == 2) {
				completarTarea();
			}
			else if(opcion == 3) {
				mostrarTareas();
			}
		}
		
	}
	
	public static void addTarea() {
		String nombreTarea;
		String descripcionTarea;
		
		// solicito nombre de la tarea
		IOUtility.escribir(bwCliente, "Nombre de la tarea:");
		// recibo nombre de la tarea
		nombreTarea = IOUtility.leer(brCliente);
		
		// solicito la descripcion de la tarea
		IOUtility.escribir(bwCliente, "Descripción de la tarea:");
		// recibo la descripción de la tarea
		descripcionTarea = IOUtility.leer(brCliente);
		
		// creo la tarea
		Tarea tarea = new Tarea(nombreTarea, descripcionTarea);
		
		// añado la tarea a la lista (compruebo si ya existe)
		synchronized (Servidor.listaTareas) {
			List tareasCliente = Servidor.listaTareas.get(idCliente);
			tareasCliente.add(tarea);
			Servidor.listaTareas.put(idCliente, tareasCliente);
		}
		
		// confirmo al cliente que ha añadido la tarea
		IOUtility.escribir(bwCliente, "Tarea añadida con éxito");
	}
	public static void completarTarea() {
		System.out.println("Completando tarea (FUNCIÓN NO IMPLEMENTADA");
	}
	public static void mostrarTareas() {
		
		// busco las tareas de este cliente
		List tareasCliente;
		synchronized (Servidor.listaTareas) {
			tareasCliente= Servidor.listaTareas.get(idCliente);
		}
		try {
			oos.writeObject(tareasCliente);
			
			
		} catch (IOException e) {
			e.printStackTrace();
		}
		
	}

}
